package com.zensar.olx.rest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.zensar.olx.bean.LoginResponse;
import com.zensar.olx.bean.LoginUser;
import com.zensar.olx.bean.OlxUser;
import com.zensar.olx.service.OlxUserService;
import com.zensar.olx.util.JwtUtil;

@RestController
public class OlxUserController {
	@Autowired
	OlxUserService service;
	@Autowired
	private AuthenticationManager manager;
	@Autowired
	private JwtUtil util;
	/**
	 *1. This is the rest specification for authenticating token for user details
	 * @param olxUser
	 * @return
	 */
	@PostMapping("/user/authenticate")
	public LoginResponse login(@RequestBody LoginUser user)
	{
		
		
		UsernamePasswordAuthenticationToken authenticationToken;
		authenticationToken = new UsernamePasswordAuthenticationToken(user.getUserName(),
				                                                      user.getPassword());
		try {
			manager.authenticate(authenticationToken);
			//User is authenticated successfully and generate the token and return the token
			//2.If user is authenticated generate token and return it
			String token = util.generateToken(user.getUserName());
			
			LoginResponse userResponse = new LoginResponse();
			userResponse.setJwt(token);
			return userResponse;
		}
		catch(Exception e) {
			e.printStackTrace();
			throw e;
			
		}
		
	}
	/**
	 * 3.This is the rest specification for Register an user
	 * @param olxUser
	 * @return
	 */
	@PostMapping("/user")
	public OlxUser addOlxUser(@RequestBody OlxUser olxUser) {
		return this.service.addOlxUser(olxUser);
		
	}
	/**
	 * 4.This is the rest specification for returning the user information.
	 * @param id
	 * @return
	 */
	@GetMapping("/user/{uid}")
	public OlxUser findOlxUserById(@PathVariable(name= "uid")int id) {
		return this.service.findOlxUser(id);
	}
	@GetMapping("/user/find/{userName}")
	public OlxUser findOlxUserByName(@PathVariable(name="userName")String name) {
		return this.service.findOlxUserByName(name);
	}
}
